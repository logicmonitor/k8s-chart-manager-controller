// +build !ignore_autogenerated

// This file was autogenerated by deepcopy-gen. Do not edit it manually!

package v1alpha1

import (
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	reflect "reflect"
)

// GetGeneratedDeepCopyFuncs returns the generated funcs, since we aren't registering them.
//
// Deprecated: deepcopy registration will go away when static deepcopy is fully implemented.
func GetGeneratedDeepCopyFuncs() []conversion.GeneratedDeepCopyFunc {
	return []conversion.GeneratedDeepCopyFunc{
		{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*ChartManager).DeepCopyInto(out.(*ChartManager))
			return nil
		}, InType: reflect.TypeOf(&ChartManager{})},
		{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*ChartManagerList).DeepCopyInto(out.(*ChartManagerList))
			return nil
		}, InType: reflect.TypeOf(&ChartManagerList{})},
		{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*ChartMgrChart).DeepCopyInto(out.(*ChartMgrChart))
			return nil
		}, InType: reflect.TypeOf(&ChartMgrChart{})},
		{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*ChartMgrChartRepository).DeepCopyInto(out.(*ChartMgrChartRepository))
			return nil
		}, InType: reflect.TypeOf(&ChartMgrChartRepository{})},
		{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*ChartMgrOptions).DeepCopyInto(out.(*ChartMgrOptions))
			return nil
		}, InType: reflect.TypeOf(&ChartMgrOptions{})},
		{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*ChartMgrRelease).DeepCopyInto(out.(*ChartMgrRelease))
			return nil
		}, InType: reflect.TypeOf(&ChartMgrRelease{})},
		{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*ChartMgrSpec).DeepCopyInto(out.(*ChartMgrSpec))
			return nil
		}, InType: reflect.TypeOf(&ChartMgrSpec{})},
		{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*ChartMgrStatus).DeepCopyInto(out.(*ChartMgrStatus))
			return nil
		}, InType: reflect.TypeOf(&ChartMgrStatus{})},
		{Fn: func(in interface{}, out interface{}, c *conversion.Cloner) error {
			in.(*ChartMgrValuePair).DeepCopyInto(out.(*ChartMgrValuePair))
			return nil
		}, InType: reflect.TypeOf(&ChartMgrValuePair{})},
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChartManager) DeepCopyInto(out *ChartManager) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChartManager.
func (in *ChartManager) DeepCopy() *ChartManager {
	if in == nil {
		return nil
	}
	out := new(ChartManager)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChartManager) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	} else {
		return nil
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChartManagerList) DeepCopyInto(out *ChartManagerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ChartManager, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChartManagerList.
func (in *ChartManagerList) DeepCopy() *ChartManagerList {
	if in == nil {
		return nil
	}
	out := new(ChartManagerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ChartManagerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	} else {
		return nil
	}
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChartMgrChart) DeepCopyInto(out *ChartMgrChart) {
	*out = *in
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		if *in == nil {
			*out = nil
		} else {
			*out = new(ChartMgrChartRepository)
			**out = **in
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChartMgrChart.
func (in *ChartMgrChart) DeepCopy() *ChartMgrChart {
	if in == nil {
		return nil
	}
	out := new(ChartMgrChart)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChartMgrChartRepository) DeepCopyInto(out *ChartMgrChartRepository) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChartMgrChartRepository.
func (in *ChartMgrChartRepository) DeepCopy() *ChartMgrChartRepository {
	if in == nil {
		return nil
	}
	out := new(ChartMgrChartRepository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChartMgrOptions) DeepCopyInto(out *ChartMgrOptions) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChartMgrOptions.
func (in *ChartMgrOptions) DeepCopy() *ChartMgrOptions {
	if in == nil {
		return nil
	}
	out := new(ChartMgrOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChartMgrRelease) DeepCopyInto(out *ChartMgrRelease) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChartMgrRelease.
func (in *ChartMgrRelease) DeepCopy() *ChartMgrRelease {
	if in == nil {
		return nil
	}
	out := new(ChartMgrRelease)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChartMgrSpec) DeepCopyInto(out *ChartMgrSpec) {
	*out = *in
	if in.Chart != nil {
		in, out := &in.Chart, &out.Chart
		if *in == nil {
			*out = nil
		} else {
			*out = new(ChartMgrChart)
			(*in).DeepCopyInto(*out)
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		if *in == nil {
			*out = nil
		} else {
			*out = new(ChartMgrOptions)
			**out = **in
		}
	}
	if in.Release != nil {
		in, out := &in.Release, &out.Release
		if *in == nil {
			*out = nil
		} else {
			*out = new(ChartMgrRelease)
			**out = **in
		}
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*ChartMgrValuePair, len(*in))
		for i := range *in {
			if (*in)[i] == nil {
				(*out)[i] = nil
			} else {
				(*out)[i] = new(ChartMgrValuePair)
				(*in)[i].DeepCopyInto((*out)[i])
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChartMgrSpec.
func (in *ChartMgrSpec) DeepCopy() *ChartMgrSpec {
	if in == nil {
		return nil
	}
	out := new(ChartMgrSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChartMgrStatus) DeepCopyInto(out *ChartMgrStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChartMgrStatus.
func (in *ChartMgrStatus) DeepCopy() *ChartMgrStatus {
	if in == nil {
		return nil
	}
	out := new(ChartMgrStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChartMgrValuePair) DeepCopyInto(out *ChartMgrValuePair) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChartMgrValuePair.
func (in *ChartMgrValuePair) DeepCopy() *ChartMgrValuePair {
	if in == nil {
		return nil
	}
	out := new(ChartMgrValuePair)
	in.DeepCopyInto(out)
	return out
}
